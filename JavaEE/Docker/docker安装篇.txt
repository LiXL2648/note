一、Docker 安装 MySQL
	1. 下载MySQL镜像
		docker pull mysql:5.7.30
	2. 启动MySQL容器，并挂载目录
		docker run -p 3306:3306 --name mysql \
		-v /usr/local/mydata/mysql/log:/var/log/mysql \
		-v /usr/local/mydata/mysql/data:/var/lib/mysql \
		-v /usr/local/mydata/mysql/conf:/etc/mysql \
		-e MYSQL_ROOT_PASSWORD=2648 -d mysql:5.7.30
	3. 进入MySQL容器
		docker exec -it mysql /bin/bash
	4. 退出容器
		exit;
	5. 在/usr/local/mydata/mysql/conf/my.cnf中配置MySQL
		vim /usr/local/mydata/mysql/conf/my.cnf
	6. 在my.cnf中输入以下配置内容
		[client]
		default-character-set=utf8

		[mysql]
		default-character-set=utf8

		[mysqld]
		init_connect='SET collation_connection=utf8_unicode_ci'
		init_connect='SET NAMES utf8'
		character-set-server=utf8
		collation-server=utf8_unicode_ci
		skip-character-set-client-handshake
		skip-name-resolve
		default-time_zone='+8:00'
		
		sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
	7. 保存退出并重新启动MySQL容器
	8. 设置MySQL容器在docker重启时自启动：docker update mysql --restart=always
	9. MySQL在虚拟主机中得安装位置为：/etc/mysql， /usr/local/mysql， /usr/local/mysql/bin/mysql
二、Docker 安装 Redis
	1. 下载镜像
		docker pull redis
	2. 创建实例并启动
		mkdir -p /mydata/redis/conf
		touch /mydata/redis/conf/redis.conf

		docker run -p 6379:6379 --name redis \
		-v /usr/local/mydata/redis/data:/data \
		-v /usr/local/mydata/redis/conf/redis.conf:/etc/redis/redis.conf \
		-d redis redis-server /etc/redis/redis.conf
	3. 使用redis-cli连接redis
		docker exec -it redis redis-cli
	4. 设置redis容器在docker重启时自启动
		docker update redis --restart=always
	5. 设置redis的持久化，在/usr/local/mydata/redis/conf/redis.conf中添加配置：appendonly yes（必须在启动容器后才能在配置文件中添加配置）
三、Docker 安装 Elasticsearch
	1. 介绍：
		① elasticsearch：存储和检索数据
		② kibana：可视化检索数据
	2. 下载镜像文件
		① docker pull elasticsearch:7.8.0
		② docker pull kibana:7.8.0
	3. 创建实例
		① Elasticsearch
			A. 创建 Elasticsearch 挂载目录
				mkdir -p /usr/local/mydata/elasticsearch/config
				mkdir -p /usr/local/mydata/elasticsearch/data
			B. 创建 Elasticsearch 的配置文件，并写入配置
				echo "http.host: 0.0.0.0">> config/elasticsearch.yml
			C. 修改 Elasticsearch 挂载目录的权限
				chmod -R 777 /usr/local/mydata/elasticsearch/
			D. 创建容器
				docker run --name elasticsearch -p 9200:9200 -p 9300:9300 \
				-e "discovery.type=single-node" \
				-e ES_JAVA_OPTS="-Xms64m -Xmx512m" \
				-v /usr/local/mydata/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \
				-v /usr/local/mydata/elasticsearch/data:/usr/share/elasticsearch/data \
				-v /usr/local/mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins \
				-d elasticsearch:7.8.0
			E. 访问：http://10.10.0.26:9200/，查看 Elasticsearch 是否启动成功
			F. 注意：-e ES_JAVA_OPTS="-Xms64m -Xmx512m" ，设置ES的初始内存和最大内存，否则导致过大启动不了ES
		② Kibana
			A. 创建容器
				docker run --name kibana -e ELASTICSEARCH_HOSTS=http://10.10.0.26:9200 -p 5601:5601 -d kibana:7.8.0
			B. 注意：http://10.10.0.26:9200 为虚拟机地址
四、Docker 安装 Nginx
	1. 随便启动一个 nginx 实例，只是为了复制出配置
		docker run -d -p 80:80 --name nginx nginx
	2. 创建 Nginx 的挂载根目录
		mkdir -p /usr/local/mydata/nginx
	3. 复制 nginx 容器的配置文件到虚拟机
		docker container cp nginx:/etc/nginx .
	4. 停止并且删除 nginx 容器	
		docker stop nginx
		docker rm nginx
	5. 将现有的 nginx 文件夹改名为 conf，创建 nginx 文件夹，将 conf 移动到 nginx 中
		mv nginx/ conf
		mkdir nginx
		mv conf/ nginx/
	6. 创建新的 nginx 容器，执行以下命令
		docker run -p 80:80 --name nginx \
		-v /usr/local/mydata/nginx/html:/usr/share/nginx/html \
		-v /usr/local/mydata/nginx/logs:/var/log/nginx \
		-v /usr/local/mydata/nginx/conf:/etc/nginx \
		-d nginx


























