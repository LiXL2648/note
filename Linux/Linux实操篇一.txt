一、Linux实操篇 远程登录Linux系统 
	1. 为什么需要远程登录Linux
		①说明：公司在进行开发时，具体情况是：
		②Linux服务器是开发小组共享的
		③正式上线的项目是运行在公网的
		④程序员需要远程登录到CentO有进行项目管理或者开发
		⑤远程登录客户端XShellS，VFtp，一般使用的XShellS，Xftp，其他的远程工具都是大同小异的
	2. 远程登录Linux-XShell介绍
		①说明：XShell目前最好的远程登录到Linux操作的软件，流畅的速度并且完美解决了中文乱码的问题，是目前程序员首选的软件
		②XShell是一个强大的安全终端模拟软件，它支持SSH1、SSH2，以及Microsoft Windows平台的TELNET协议
		③XShell可以在Windows界面下用来访问远端不同系统下的服务器，从而比较好的达到远程控制终端的目的
	3. 安装XShell远程登录工具
		①如果希望在安装XShell远程登录工具后即可使用，则需要在Linux系统下开启sshd服务的端口号22
			终端指令：setup，开启了sshd服务后即可进行XShell远程工具的安装
		②安装XShell远程登录工具：傻瓜式安装即可
		③XShell 5的关键配置
			A. 名称可以自定义
			B. 协议必须选SSH协议
			C. 主机即为要远程登录Linux系统的IP地址
				查看IP地址的终端指令：ifconfig
			D. 连接成功还需要输入登录Linux系统的用户名和密码
		④可以进行远程登录验证
			A. 终端指令ll:可以查看当前root/下的所有文件
			B. 终端指令cd /home/: 可以进入home/
			C. 终端指令touch hello：在当前目录下生成一个文件hello
	4. 远程上传下载Xftp5
		①介绍：是一个基于Windows平台的功能强大的SFTP、FTP文件传输软件，使用Xftp以后，Windows用户能安全地在Unix/Linux和Windows之间传输文件
		②Xftp5软件的安装
			A. 运行Xftp_5.0.543.exe
			B. 选择免费为家庭/学校
			C. 一直下一步即可安装成功
		③Xftp5软件的配置
			A. 名称自定义
			B. 主机即为要远程登录Linux系统的IP地址
			C. 协议必须使用SFTP协议，因为该协议的端口为22，FTP协议的端口为21，没有开启
			D. 用户名使用的是Linux登录时的用户名
			E. 确定即可
		④解决中文乱码的问题
			A. 点击属性
			B. 点击选项
			C. 点击使用UTF-8编码
			D. 点击确定后刷新页面即可
		⑤使用：
			A. Xftp左边为Windows的界面
			B. Xftp右边为root目录
			C. 当从Windows发送文件到CentOS时：
				1). 选中目标文件
				2). 点击右键选择传输，目标文件即传输到CentOS的root目录
			D. 当从CentOS发送文件到Windows时：
				1). 选中目标文件
				2). 点击右键选择传输，目标文件即传输到Windows的桌面上
二、Linux实操篇 vi和vim编辑器
	1. vi和vim编辑器的基本介绍
		①所有的Linux系统都会内建vi文本编辑器
		②Vim具有程序编辑的能力，可以看做是Vi的增强版本，可以主动的以字体颜色辨别语法的正确性，方便程序设计。
			代码补充、编辑、及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用
	2. vi和vim的三种常见模式
		①正常模式/一般模式：
			以vim代开一个档案就直接进入一般模式（正常模式）。在这个模式中，可以使用“上下左右”按键来移动光标，
			可以使用“删除字符”或“删除正行来处理档案内容”，也可以使用“复制、粘贴”来处理文件数据
		②插入模式/编辑模式
			在插入模式下，程序员可以输入内容
			按下i,I,o,O,a,A,r,R等任何一个字母时才会进入编辑模式，一般习惯按i
		③命令模式
			在这个模式当中，提供了一些相关的指令，完成读取、存盘、替换、离开vim、显示行号等动作都是在这个模式下达成的
	3. 三种常见模式的转换
		①在终端指令中使用vim xxx进入该文件的一般/正常模式
		②一般/正常模式与编辑模式的相互转换
			A. 一般/正常模式->编辑模式: i或者a
			B. 编辑模式->一般/正常模式: esc
		②一般/正常模式与命令模式的相互转换
			一般/正常模式->命令模式: :或者/
			命令模式->一般/正常模式: esc
		④在命令模式下才能进行一些命令
			A. :wq: 存盘并离开
			B. :q： 离开（仅限于没有替换文件中的内容）
			C. :q!: 强制退出，即使替换了文件中的内容，也不给予保存
	4. 案例：使用远程登录工具创建一个Hello.java程序，保存并退出
		①进入root/：cd /root/
		②查看root/: ll
		③新建Hello.java并进入编辑器: vim Hello.java
		④进入编辑器时是一般/正常状态
		⑤进入插入/编辑状态：i/a
		⑥当编写完程序代码需要进行保存时必须先进入一般状态：esc
		⑦进行存盘并退出vim编辑器时需要进入命令状态：:或者/
		⑧保存并退出：:wq
	5. 注：
		①一般使用vim编辑器打开一个文件时，进入的是编辑器的一般/正常状态
		②当需要改变文件的内容时，需要进入插入/编辑状态
		③当需要进入存盘等操作时，需要进入命令模式
		④退出文件编辑器时，必须进入命令模式
		⑤插入/编辑模式与命令模式不能直接进行转换，必须通过一般/正常模式
	6. 实操案例：
		①拷贝: 进入一般模式下
			A. 拷贝当前行：yy
			B. 拷贝当前行向下的n行：n+yy
			C. 拷贝完成后粘贴：p
		②删除：进入一般模式下
			A. 删除当前行：dd
			B. 删除当前行向下的n行：n+dd
		③查找：进入命令模式[/]
			A. 查找某个单词：关键字+回车
			B. 继续查找：n
		④设置行号：进入命令模式[:]
			A. 设置行号：set nu
			B. 取消行号：set nonu
		⑤快捷键到文档的最顶行和最底行：进入一般模式下
			A. 光标指向末行：G
			B. 光标指向首行：gg
		⑥撤销：进入一般模式下
			A. 插入模式中输入一段内容，回到一般模式下进行撤销：u
		⑦将光标定位到n行
			A. 设置行号：进入命令模式下[:]+set nu+回车
			B. 定位n行： 回到一般模式[esc]+n+shif+g 
三、Linux实操篇 开机、重启和用户注销
	1. 基本介绍：
		①shutdown
			A. shutdown -h now: 表示立即关机
			B. shutdown -h 1: 表示1分钟后关机
			C. shutdown -r now: 表示立即重启
		②half：表示立即关机，等价于shutdown -h now
		③reboot：直接重启系统
		④sync：把内存的数据同步到磁盘
	2. 注意细节
		当我们关机或者重启时，都应该先执行syn指令，把内存的数据写入磁盘，防止数据丢失
	3. 用户登录和注销
		①基本介绍
			A. 登录时尽量少使用root账号登录，因为他是系统管理员，最大的权限，避免操作失误。可以利用普通用户登录
				登录后再用“su -用户名”命令切换成系统管理员身份
			B. 在提示符下输入logout即可注销用户
		②使用细节：
			logout注销指令在图形运行级别无效，在运行级别3下有效，即远程登录有效
四、Linux实操篇 用户管理
	1. 基本介绍：
		Linux系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统
	2. 添加用户
		①基本语法：useradd 用户名
		②细节说明：
			A. 当创建用户成功后，如果没有指定组名，会创建一个与用户名相同名字的组存放该用户
			B. 当创建用户成功后，会自动创建和用户同名的家目录
			C. 也可以通过useradd -d 指定目录，新的用户名，给新创建的用户指定家目录
	3. 指定/修改密码
		①基本语法：passwd 用户名
	4. 删除用户：
		①基本语法：userdel 用户名
		②应用案例：
			A. 删除用户，保留家目录：userdel 用户名
			B. 删除用户及用户主目录：userdel -r 用户名
		③是否应当保留家目录
			在实际开发中，删除用户时应当保留家目录，原因是可能会留下开发产生的源代码以及文档
	5. 切换用户
		①介绍：
			在操作Linux中，如果当前用户的权限不够，可以通过su - 指令，切换到高权限用户，比如root
		②基本语法：
			su - 切换用户名
		③细节说明
			从权限高的用户切换到权限低的用户，不需要输入密码，反之以及相同权限用户之间的切换则需要
			从权限高的用户切换到权限低的用户，当需要返回时，输入exit指令即可
	6. 查询用户信息指令
		①基本语法
			id 用户名
		②应用案例：
			查询root信息：id root
		③细节说明：
			当用户不存在时，返回无此用户
	7. 组的管理：
		①介绍
			类似于角色，系统可以对有共性的多个用户进行统一的管理
		②基本语法：
			groupadd 组名
		③增加用户时直接为用户分组
			group -g 组名 用户名
		④修改用户的组
			usermod -g 组名 用户名
		⑤创建新用户，并为其指定组与家目录
			useradd -g friend -d /home/hu/ Hu
		⑥删除组
			groupdel 组名
	8. 用户和组的相关文件
		①/etc/passwd文件：
			A. 用户（user）的配置文件，记录用户的各种信息
			B. 每行的含义：用户名、口令（密码，加密）、用户标识号（用户id）、组标识号（组id）注释性描述、主目录、登录shell
		②/etc/shadow文件：口令（密码）的配置文件
			A. 口令的配置文件
			B. 每行的含义：用户（登录）名、加密口令、最后一次修改的时间、最小时间间隔、最大时间间隔、警告时间、不活动时间、失效时间、标志
		③/etc/group文件：
			A. 组（group）的配置文件、记录Linux包含的组的信息
			B. 每行的含义：组名、口令、组的标识号（组id）、组内用户列表（一般看不见）
	注：
		①cd(change directory): 切换目录
		②一个用户对应于home/的一个家文件
五、Linux实操篇 实用指令一
	1. 指定运行级别
		①0：关机
		②1：单用户【找回密码，修改关机和重启的运行级别】
		③2：多用户状态无网络服务
		④3：多用户状态有网络服务【纯指令界面】
		⑤4：系统未使用保留给用户
		⑥5：图形用户界面
		⑦6：重启系统
	2. 配置文件：
		①常用运行级别是3和5，可通过修改配置文件修改默认的运行级别
		②修改运行级别后需要重新输入账号密码。
		③配置文件：/etc/inittab
		④修改运行级别：init[012356]，4为系统未使用保留给用户
		⑤修改默认运行级别：
			A. 通过vim /etc/inittab进入配置文件
			B. 将id:5:initdefault这一行的数字改为运行级别对应的数字
	3. 修改密码：
		①开机显示画面后按enter键进入一个倒计时界面
		②继续按enter键进入一个CentOS 6 （2.6.32-642.e16.x86-64）的界面
		③输入e进入在系统启动之前编辑命令进入CNU GRUB version 0.97的界面，在方框中有三个选项
		④将光标高亮到第二选项，再输入e，进入修改运行级别的界面
		⑤输入空格+1按回车使用单用户模式，再进入③的界面，此时已经修改了内核的运行级别
		⑥输入b开启启动系统，此时系统进入单用户模式，并且是通过root启动，此时即可进行密码的修改
		⑦修改密码
			A. passwd + root
			B. 输入新密码
			C. 输入确定密码
			D. 重启系统
	4. 单用户级别的其他用处
		①当将系统默认的运行级别设置为0:(关机)或者6(重启系统)时
		②当忘记密码时
		③当需要强制进入root级别时
	5. 帮助指令
		①man 获取帮助信息
			基本语法：man [命令或配置文件]：功能描述，获得帮助信息
		②help 指令
			基本语法：help 命令：功能描述，获得shell内置命令的帮助信息
		③百度帮助
六、Linux实操篇 实用指令二
	1. 文件目录类一
		①pwd指令
			A. 基本语法：pwd
			B. 功能描述：显示当前工作目录的绝对路径
		②ls指令：
			A. 基本语法：ls [选项][目录|文件]
			B. 常用选项
				a. -a: 显示当前目录所有的文件和目录，包括隐藏的
				b. -l: 以列表的方式显示信息
			C. 注意细节
				a. ls可以单独使用，显示的是当前目录的文件和目录，不包括隐藏的
				b. 选项可以混合使用，比如：ls -a -l(ls -al): 以里列表的的形式显示当前目录的所有文件和目录信息
		③cd指令
			A. 基本语法: cd [选项]
			B. 功能描述：切换到指定目录
			C. 常用选项：
				a. 绝对路径：即从根目录开始定位
				b. 相对路径：通过cd ../一直返回根目录，再往下开始定位
				c. cd ~或者cd: 回到自己的家目录
				d. cd ../或者cd ..: 返回上一级目录
			D. 思考题：假如当前工作目录是/root，希望进入home目录：
				a. 绝对路径：cd /home/
				b. 相对路径：cd ../home/
			E. 应用案例：假设当前目录为: /usr/lib
				a. 案例1：使用绝对路径切换到root用户: cd /root/
				b. 案例2：使用相对路径切换到root目录：cd ../../root/
				c. 案例3：表示回到当前目录的上一级：cd ../
				d. 案例4：回到自己的家目录：cd ~ | cd
		④mkdir指令：
			A. 基本介绍：mkdir指令用于创建目录
			B. 基本语法：mkdir [选项] 表示要创建的目录
			C. 常用选项：-p 表示要创建的多级目录
			D. 应用案例：
				a. 创建一个目录/home/dog：mkdir /home/dog
				b. 创建一个多级目录/home/animal/tiger：mkdir -p /home/animal/tiger
		⑤rmdir指令：
			A. 基本介绍：rmdir指令用于删除空目录
			B. 基本语法：rmdir [选项] 表示要删除的空目录
			C. 应用案例：删除一个目录/home/dog：rmdir /home/dog
			D. 注意细节：
				a. rmdir删除的是空目录，如果目录不为空则无法删除：rmdir: 删除 "animal" 失败: 目录非空
				b. 如果需要删除非空目录，则需要使用rm -rf+要删除的目录：rm -rf /home/animal
				
		⑥touch 指令
			A. 基本介绍：touch指令用于创建空文件
			B. 基本语法：touch 文件名称
			C. 注意细节：
				a. 该方法可以连续创建多个空文件
				b. 一般使用相对路径进行创建文件
			D. 应用案例：
				a. 创建一个空文件hello.java：touch hello.java
				b. 在/home/test中连续创建多个空文件
					mkdir test
					cd test/
					touch a.txt b.txt c.txt
		⑦cp 指令--重点
			A. 基本介绍：cp指令拷贝文件到指定目录
			B. 基本语法：cp [选项] source dest
			C. 常用选项：-r，递归复制整个文件夹
			D. 注意细节：
				a. 一般使用相对路径进行复制文件
				b. 当遇到相同文件覆盖问题，当系统询问是否需要覆盖相同文件时，y代表是，n代表否
				c. 可以使用\cp指令进行强制覆盖
				d. 时刻注意当前的工作位置并且熟记目录树
			E. 应用案例：
				a. 将/home/hello.txt拷贝到/home/test/下：cp hello.txt test/
				b. 递归复制test目录到new目录中：cp hello.txt test/
		⑧rm 指令：
			A. 基本介绍：rm 指令移除文件或者目录
			B. 基本语法：rm [选项] 要删除的文件或者目录
			C. 常用选项
				a. -r：递归删除整个文件夹
				b. -f: 强制删除文件不提示
			D. 应用案例：
				a. 删除/home/hello.txt并提示是否删除：rm hello.txt
				b. 强制删除/home/hello.txt不提示：rm -f hello.txt
				c. 递归强制删除整个test/: rm -rf test
		⑨mv 指令：
			A. 基本介绍：mv指令用于文件或者目录移动或者重命名
			B. 基本语法：
				a. mv oldNameFile newNameFile: 重命名
				b. mv /directory/file /directory: 移动文件
			C. 应用案例：
				a. 将/home/的hello.java重命名为hello.txt:  mv hello.java hello.txt
				b. 将/home/的new目录重命名为li:  mv new li
				c. 将/home/li/的test/移动到/home/：mv test/ /home/
			D. 注意细节：
				a. 移动目录时不需要递归移动目录中的文件
				b. -f强制覆盖不仅适用于文件复制时，而且适用于文件移动
	2. 文件目录类二
		①cat 指令
			A. 基本介绍：cat查看文件，无法修改文件
			B. 基本语法：cat [选项] 要查看的文件
			C. 常用选项：-n: 显示行号
			D. 应用实例：
				案例1：查看/etc/profile文件的内容，并显示行号：cat -n /etc/profile
				案例2: 使用管道命令查看文件内容：cat -n /etc/profile | more
			E. 使用细节：为了浏览方便，一般都会带上管道命令 | more
		②more 指令
			A. 基本介绍：
				a. more指令是一个基于vi编辑器的文本过滤器，它以全屏的方式按页显示文本文件的内容
				b. more指令中设置可若干快捷键
			B. 基本语法：more 要查看的文件
			C. 操作说明
				a. 空格键：表示向下一页
				b. 回车键：表示向下一行
				c. q: 表示立刻离开more，不在显示该文件内容
				d. Ctrl+f: 表示向下滚动一屏
				e. Ctrl+B: 表示向上滚动一屏
				f. =：输出当前的行号
				g. :f: 输出文件名和当前的行号
		③less 指令
			A. 基本介绍：
				a. less指令用来分屏查看文件内容，它的功能和more指令类似，但是比more指令更加强大，支持各种显示终端
				b. less指令在显示文件内容时，并不是一次性将整个文件加载之后才显示，而是根据显示需要加载的内容。
				c. 对于显示大型文件具有较高的效率
			B. 基本语法：less 要查看的文件
			C. 操作说明：
				a. 空格键：向下滑动一页
				b. pagedown: 向下滑动一页
				c. pageup:向上滑动一页
				d. /字符串：向下搜索[字符串]的功能；n: 向下查找；N: 向上查找
				e. ?字符串：向上搜索[字符串]的功能；n: 向上查找；N: 向下查找
				f. q: 表示立刻离开less，不在显示该文件的内容
			D. 注意细节：
				一般使用less查看大型文件，该方法的效率更高
		④> 指令与>> 指令：
			A. 基本介绍
				a. >: 输出重定向（覆盖）
				b. >>: 追加内容
			B. 基本用法：
				a. ls -l > 文件，功能描述：列表的内容写入文件中（覆盖写）
				b. ls -al >> 文件，功能描述：列表内容追加到文件末尾（追加写）
				c. cat 文件1 > 文件2，功能描述：将文件1的内容覆盖到文件2
				d. echo 内容 >> 文件，功能描述：输入内容，追加到文件的末尾
			C. 应用案例：
				a. 将/home目录下的文件列表写入到/home/info.txt中: ls -l > info.txt
				b. 将当前日历信息追加到/home/mycal文件中: cal >> mycal(cat查看当前日历)
			D. 注意细节：
				a. 当文件不存在时，自动创建文件
				b. 不需要指定文件的后缀也可以创建文件
		⑤echo指令
			A. 基本介绍
				echo输出内容到控制台
			B. 基本用法：
				echo [选项] 输出字符
			C. 应用案例：
				案例一：使用echo指令输出环境变量，输出当前的环境路径: echo #PATH
				案例二：使用echo指令输出“HelloWorld!”: echo "HelloWhorld!"
		⑥head 指令：
			A. 基本介绍
				head用于显示文件的开头部分内容，默认情况下head指令显示文件的前十行内容
			B. 基本用法：
				a. head 文件：: 查看文件前十行内容
				b. head -n num 文件：查看文件开头num行内容，num可以是任意行数
			C. 应用案例：
				案例一：查看/etc/profile的前5行代码：head -n 5 /etc/profile
		⑦tail指令：
			A. 基本介绍
				tail用于输出文件尾部的内容，默认情况下tail指令显示文件的后十行内容
			B. 基本用法：
				a. tail 文件：: 查看文件后十行内容
				b. tail -n num 文件：查看文件结尾num行内容，num可以是任意行数
				c. tail -f 文件：实时追踪文件的所有更新
			C. 应用案例：
				案例一：查看/etc/profile的后5行代码：tail -n 5 /etc/profile
		⑧ln 指令
			A. 基本介绍
				软连接也叫符号链接，类似于Windows里的快捷方式，主要存放了链接其他文件的路径
			B. 基本用法：
				a. 给源文件创建一个软连接：ln -s [源文件或者目录] [软连接名]
				b. 删除一个软连接：rm -rf 软连接名（注意软连接名不需要加/）
			C. 应用案例：
				a. 案例一：在/home目录下创建一个软连接linkToRoot，链接到 /root 目录
					cd /home ln -s /root linkToRoot
				b. 案例二：删除软连接linkToRoot: rm -rf linkToRoot
			D. 细节说明：
				当使用pwd指令查看目录时，仍然看到的软连接所在的目录。
		⑥history 指令
			A. 基本介绍
				查看已经执行过的历史命令，也可以执行历史指令
			B. 基本用法：
				a. 查看已经执行过的所有历史指令：history
				b. 查看已经执行过最后N条历史指令：history N
				c. 执行某条历史指令：！N
			C. 应用案例：
				a. 显示所有的历史指令：history
				b. 显示最近使用过的10条指令：history 10
				c. 指令编号为10的历史指令：!10
七、Linux实操篇 时间日期类
	1. date 指令-显示当前日期
		①基本语法
			A. date （功能描述：显示当前时间）
			B. date +%Y （功能描述：显示当前年份）
			C. date +%m （功能描述：显示当前月份）
			D. date +%d （功能描述：显示当前是哪一天）
			E. date "+%Y-%m-%d %H:%M:%S"（功能描述：显示年月日时分秒）
		②应用实例
			A. 案例1: 显示当前时间信息：date → 2019年 05月 16日 星期四 19:21:43 CST
			B. 案例2: 显示当前时间年月日：date "+%Y-%m-%d" → 2019-05-16
			C. 案例3: 显示当前时间年月日时分秒：date "+%Y-%m-%d %H:%M:%S" → 2019-05-16 19:24:09
	2. date 指令-设置日期
		①基本语法：date -s 字符串时间
		②应用实例
			A. 案例1: 设置系统当前时间， 比如设置成2019-5-24 10:00:00
				date -s "2019-5-24 10:00:00" → 2019年 05月 24日 星期五 10:00:00 CST
	3. cal 指令	查看日历指令
		①基本语法：cal [选项] （功能描述：不加选项，显示本月日历）
		②应用实例
			A. 案例1: 显示当前日历
				cat
			B.  案例2: 显示2020 年日历
				cat 2020
八、搜索查找类
	1. find 指令
		① 指令介绍：find 指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终端。
		② 基本语法：find [搜索范围] [选项]
		③选项说明
			A. -name <文件名>：按照指定的文件名查找模式查找文件
			B. -user <用户名>：查找属于指定用户名的所有文件
			C. -size <文件大小>：按照指定文件大小查找文件
		④应用实例
		A. 案例1: 按文件名：根据名称查找/home 目录下的hello.txt 文件
			find /home -name a.txt → /home/test/a.txt
		B. 案例2：按拥有者：查找/opt 目录下，用户名称为nobody 的文件
			find / -user root → 退出ctrl + c
		C. 查找整个linux 系统下大于20m 的文件（+n 大于-n 小于n 等于）
			a. find / -size +20M
			b. 查看某个文件的及大小：opt/gitlab/embedded/bin/prometheus
			c. 结果：-rwxr-xr-x. 1 root root 59M 5月  28 2018 /opt/gitlab/embedded/bin/prometheus
			d. 注意：查看文件大小时MB的单位为大写M，KB的单位为小写k。
	2. locate 指令
		①指令介绍：
			locaate 指令可以快速定位文件路径。locate 指令利用事先建立的系统中所有文件名称及路径的数据库
			locate 数据库实现快速定位给定的文件。Locate 指令无需遍历整个文件系统，查询速度较快。为了保
			证查询结果的准确度，管理员必须定期更新locate 时刻。
		②基本语法：locate 搜索文件
		③特别说明
			由于locate 指令基于数据库进行查询，所以第一次运行前，必须使用updatedb 指令创建locate 数
			据库。
		④应用实例
			A. 案例1: 请使用locate 指令快速定位hello.txt 文件所在目录
				a. updatedb: 第一次查找，需要使用updatedb指令建立系统中所有文件名称及路径的数据库
				b. locate gitlab-http.conf: 查找文件
	3. grep 指令和管道符号|
		① 指令介绍
			grep 过滤查找， 管道符，“|”，表示将前一个命令的处理结果输出传递给后面的命令处理。
		② 基本语法
			grep [选项] 查找内容源文件
		③ 常用选项
			A. -n 显示匹配行即行号
			B. -i 忽略字母的大小写
		④ 应用实例
			A. 案例1: 请在a.txt 文件中，查找"yes" 所在行，并且显示行号
				cat a.txt | grep -n yes
				1:yes
				6:yes
			B. 案例1: 请在a.txt 文件中，查找"yes" 所在行，并且显示行号，忽略大小写
				cat a.txt | grep -ni yes
				1:yes
				6:yes
				7:YES
九、压缩和解压类
	1. gzip/gunzip 指令
		① 指令介绍
			gzip 用于压缩文件， gunzip 用于解压的
		②基本语法
			A. gzip 文件（功能描述：压缩文件，只能将文件压缩为*.gz 文件）
			B. gunzip 文件.gz （功能描述：解压缩文件命令）
		③应用实例
			A. 案例1: gzip 压缩， 将/home 下的hello.txt 文件进行压缩
				gzip hello.txt
			B. 案例2: gunzip 压缩， 将/home 下的hello.txt.gz 文件进行解压缩
				gunzip hello.txt.gz
		④细节说明
			当我们使用gzip 对文件进行压缩后，不会保留原来的文件。
	2. zip/unzip 指令
		① 指令介绍
			zip 用于压缩文件， unzip 用于解压的，这个在项目打包发布中很有用的
		②基本语法
			zip [选项] XXX.zip 将要压缩的内容（功能描述：压缩文件和目录的命令）
			unzip [选项] XXX.zip （功能描述：解压缩文件）
		③zip 常用选项
			-r：递归压缩，即压缩目录
		④unzip 的常用选项
			-d<目录> ：指定解压后文件的存放目录
		⑤应用实例
			A. 案例1：将 /home/test/ 中的 a.txt 压缩成 a.zip, 删除a.txt, 再解压a.zip, 最后删除a.zip。
				a. cd /home/test/
				b. zip a.zip a.txt
				c. rm -f a.txt
				d. unzip a.zip
			B. 案例2：将 /home/test/ 中的 a.txt b.txt c.txt 同时压缩到test.zip, 删除a.txt b.txt c.txt, 再解压test.zip, 最后删除test.zip
				a. zip test.zip a.txt b.txt c.txt
				b. rm -f a.txt b.txt c.txt
				c. unzip test.zip
				d. rm -f test.zip
			C. 案例1: 将 /home 下的test目录进行压缩成test.zip，删除test目录，解压test.zip到当前目录，解压test.zip到到当前目录的test1下。
				a. zip -r test.zip test/
				b. rm -rf test/
				c. unzip test.zip
				d. unzip -d test1/ test.zip
		⑥细节说明
				当我们使用gzip 对文件进行压缩后，会保留原来的文件。
	3. tar 指令
		① 指令介绍
			tar 指令是打包指令，最后打包后的文件是.tar.gz 的文件。
		② 基本语法
			tar [选项] XXX.tar.gz 打包的内容(功能描述：打包目录，压缩后的文件格式.tar.gz)
		③ 选项说明
			A. -c: 产生.tar打包文件
			B. -v: 显示详细信息
			C. -f: 指定压缩后的文件名
			D. -z: 打包同时压缩
			E. -x: 解包.tar文件
		④应用实例
			A. 案例1: 压缩多个文件，将/home/test/a.txt 、/home/test/b.txt、/home/test/c.txt 压缩成abc.tar.gz
				a. cd /home/
				b. tar -zcvf test.tar.gz test/a.txt test/b.txt test/c.txt
			B. 案例2: 将/home/test 的文件夹压缩成test.tar.gz
				a. tar -zcvf test.tar.gz test/
			C. 案例3: 先删除/home/test/下的a.txt b.txt c.txt, 再将abc.tar.gz 解压到当前目录案
				a. cd/home/test
				b. rm -f a.txt b.txt c.txt
				c. cd ../
				d. tar -zxvf abc.tar.gz
			D. 案例4: 将test.tar.gz 解压到/home/test1 目录下
				a. mkdir test1
				b. tar -zxvf test.tar.gz -C test1/
			E. 细节说明：指定解压到的那个目录，事先要存在才能成功，否则会报错。

	