前端基础：课程简介
	C/S架构（客户端/服务器）
		1. 一般我们使用的软件是C/S架构
		2. C表示客户端，用户通过客户端使用软件
		3. S表示服务器，服务器负责处理软件的业务逻辑
		4. 举例.....
		5. 特点：
			①软件使用之前必须安装
			②软件更新时，服务器和客户端得同时更新
			③C/S架构的软件不能跨平台使用
			④C/S架构的软件客户端和服务器通信采用的是自有协议（电报密码本），相对比较安全
	B/S架构（浏览器／服务器）
		1. 本质上也是C/S架构，只不过B/S架构的软件，使用浏览器作为软件的客户端
		2. B/S架构软件通过使用浏览器访问的形式，来使用软件
		3. 举例......
		4. 特点：
			①软件不需要安装，直接使用浏览器访问指定的网址即可
			②软件更新时，客户端不需要更新
			③软件可以跨平台，只要系统中有浏览器，就可以使用
			④B/S架构的软件，客户端和服务器之间通信采用的是HTP协议，相反来说不安全
软件开发流程
	网页设计师根据需求设计网页（PS）-> 前端工程师将设计做成静态网页（HTML5） -> 后台工程师将静态网页改为动态网页（JSP）
前端和后台的比较：
	后台入门难，门槛高
	前端入门简单，深入难
	前端需要掌握前端技术和后台技术（全栈工程师）
HTML（超文本标记语言）的发展
	1993年6月：HTML第一个版本发布
	1995年11月：HTML2.0（W3Cd定义的第一个标准）
	1997年1月：HTML3.2（W3C推荐）
	1999年12月：HTML4.01（W3C推荐）
	2000年底：XHTML1.0（W3C推荐）：HTML和XML都是标记语言，而HTML太过于松散，兼容性差，而XML相对严谨，于是由HTML向XML过度
	2014年10月：HTML5（W3C推荐）
    h5的文档声明<!DOCTYPE html>，声明当前的网页是按照HTML5标准写的，编写网页的时候一定要将h5的文档声明写下网页的最上面
		如果不写文档声明，则会导致有些浏览器进入一个怪异模式，进入怪异模式以后，浏览器解析页面会导致页面无法正常显示，
		为避免该怪异模式，一定要写文档声明
	为了兼容一些旧的页面，浏览器中设置了俩中解析模式
		标准模式
		怪异模式
	怪异模式解析网页时会产生一些不可预期的行为。
根据W3C标准，一个网页主要由三个部分组成：结构/表现/行为
	结构标准（HTML）：用来描述页面的结构
	表现标准（CSS）：用于控制页面中元素的样式
	行为标准（JavaScript）：用于响应用户的操作
HTML
	1. HTML（Hypertext MarKup Language）超文本标记语言
		（1）纯文本：用纯文本编辑器编写的文本就叫纯文本，而网页就是用纯文本编写的
		（2）纯文本文件：只能保存文本内容，图片/音频/视频等格式化内容，不允许设置
		（3）超：超链接，在文本的基础上
		（4）标记：指的是标签
	2. 它负责网页的三个要素之中的结果
	3. HTNML使用标签的形式来识别网页中的不同组成部分
	4. 所谓超文本标记指的是超链接，使用超链接可以让我们从一个页面跳转到另一个页面
	标准格式：
		<!--hml根标签，一个网页中有且仅有一个根标签，网页中的所有内容都应该写在html跟标签中-->
		<html>
			<!--head的内容不会显示在网页中，帮助浏览器解析页面-->
			<head>
				<!--需要告诉浏览器，网页采用的字符集编码
					meta标签用来设置网页的一些元数据，字符集/关键字/简介等
					meta是一个字节结束标签，编写一个字结束标签时，在开始标签添加一个/
					ANSI：自动以系统的默认编码来保存文件-->
				<meta charset="utf-8"/><!--注意，编码与解码的字符集需要保持一致-->
				<!--title中的内容出现在网页的标题栏中，搜索引擎在检索页面时，会首先检索title标签中的内容
					它是网页中最重要的内容，会影响到网页在搜索引擎中的排名
				-->
				<title></title>
			</head>
			<!--body标签用来设置网页的主题内容，在body中的所有可见内容都会显示在网页中-->
			<body></body>
		</html>
标签：
	1. <h1></h1>：标题标签
	2. <font></font>：字体标签，用于设置字体的属性，属性需要写在开始标签中，一个标签可以设置多个属性，
					  属性之间用空格隔开，size:1-7，不赞成使用
		
		
		
		
		

		
	