JSON：
	1. 简介
		①JS的对象只有JS才能够识别，其他变编程语言都无法识别
		②JSON就是一个特殊格式的字符串，这个字符串可以被任意编程语言所识别，并且可以转换为任意编程
			语言中的对象，JSON在开发中主要用于数据的交互
	2. 定义：
		①全称：JavaScript Object Notation，JS对象表示法
		②格式：JSON金额JS对象的格式一样，只不过JSON字符串中的属性名必须加双引号，其他的和JS对象格式相同
	3. 分类	:
		①对象{}：var json = '{"name":"li", "age":18, "gander":"男"}';
		②数组[]：var arr = '[123, 456, "abc", true, null, obj, arr]';
	4. JSON中允许的值：
		①字符串
		②数值
		③布尔值
		④null
		⑤对象（只能是普通对象，不能传函数）var obj = '{{"name":"li", "age":18, "gander":"男"}}';
		⑥数组：var obj = '{"arr":[123, 456, "abc", true, null, obj, arr]}';
	5. JSON字符串与JS对象的转换
		①JSON：在JS中，为我们提供了一个工具类，就是JSON，这个对象可以帮助我们将一个JSON字符串转化为JS对象，
			也可以将一个JS对象转化为JSON字符串。
		②parse():
			A. 可以将一个JSON字符串转换为JS对象
			B. 需要一个JSON字符串作为参数，会将该JSON字符串转换为JS对象返回
			C. 举例：
				var json = '{"name":"li", "age":18, "gander":"男"}';
				var obj = JSON.parse(json);
		③stringify():
			A. 可以将一个JS对象转换为JSON字符串
			B. 需要一个JS对象作为参数，会将该JS对象转化为JSON字符串返回
			C. 举例：
				var j = {name:"li", age:18, gander:"男"};
				var json = JSON.stringify(js);
		⑤在IE7及以下版本的浏览器中不支持JSON对象，所以在这些浏览器中调用JSON对象时，将会报错
	6. eval():
		①这个函数可以用于执行一段字符串形式的JS代码，并将执行结果返回
		②如果使用eval()执行的字符串中含有{}，这个函数会将{}当做是代码块
		③如果不希望将{}解析为代码块，则需要将{}放在()里面表示为一个整体，载将该字符串作为eval()的参数
		④举例：
			var str = '{"name":"li", "age":18, "gander":"男"}';
			var obj = eval("(" + str + ")");
		⑤eval()这个函数的功能非常强大，可以直接执行一个字符串中的JS代码，但是在开发的中
			尽量不要使用该函数，首先它的执行性能比较差， 而且该函数具有安全隐患，
			容易传入恶意代码，对用户和数据造成破坏
	7. 为了兼容IE7及以下版本的浏览器对JSON的操作，可引入一个外部的JS文件来处理
			













	
	
	
	